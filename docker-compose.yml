version: '3'

services:
  geocore-pgdb:
    container_name: geocore-pgdb
    image: mdillon/postgis:latest
    restart: always
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    ports:
      - "5444:5432"
    env_file:
      - ./.env.db
    networks:
      - back-tier

  geocore-mongodb:
    container_name: geocore-mongodb
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    ports:
        - 27017:27017
    command: mongod --logpath=/dev/null # --quiet
    volumes:
      - "./data/mongo:/data/db"
    networks:
      - back-tier

  geocore-api:
    restart: always
    build:
      context: ./apps/geocore-api
      dockerfile: Dockerfile
    container_name: geocore-api
    command: python manage.py runserver 0.0.0.0:8080
    volumes:
      - ./apps/geocore-api:/apps/api
      - ./data:/data
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    depends_on:
      - geocore-pgdb
      - geocore-mongodb
    links:
      - geocore-pgdb
      - geocore-mongodb
    networks:
      - back-tier

  geocore-tileserver:
    restart: always
    build:
      context: ./apps/geocore-tileserver
      dockerfile: Dockerfile
    container_name: geocore-tileserver
    command: python3 manage.py runserver 0.0.0.0:8088
    #command: gunicorn -w 2 --preload -b 0.0.0.0:8090 "TileStache:WSGITileServer('/apps/tileserver/conf/tilestache/osmroads.cfg')" --log-level=DEBUG --timeout=540
    volumes:
      - ./apps/geocore-tileserver:/apps/tileserver
    env_file:
      - ./.env
    depends_on:
      - geocore-pgdb
    links:
      - geocore-pgdb
    networks:
      - back-tier

  geocore-tileserver-nginx:
    restart: always
    build:
      context: ./apps/geocore-tileserver
      dockerfile: Dockerfile.nginx
    container_name: geocore-tileserver-nginx
    volumes:
      - ./apps/geocore-tileserver:/apps/tileserver
    ports:
      - "1001:1001"
    depends_on:
      - geocore-tileserver
    links:
      - geocore-tileserver
    networks:
      - back-tier

#  frontend:
#    restart: always
#    build: ./frontend
#    container_name: frontend
#    command: npm start
#    volumes:
#      - ./frontend:/app/frontend
#    ports:
#      - "3000:3000"
#    links:
#      - geocore-api
#    networks:
#      - back-tier

networks:
  back-tier:
      driver: bridge